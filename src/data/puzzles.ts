
import { Puzzle } from '@/types/puzzle';

export const puzzles: Record<string, Puzzle[]> = {
  'riddles-enigmas': [
    {
      id: 'riddle-1-1',
      title: 'L\'√ânigme du Miroir',
      description: 'Une devinette classique de logique',
      type: 'riddle',
      level: 1,
      difficulty: 3,
      timeLimit: 45,
      content: {
        question: "Je vous montre le monde, mais √† l'envers. Plus vous me regardez, plus vous vous voyez. Que suis-je ?",
        hint: "R√©fl√©chissez √† ce qui inverse votre image..."
      },
      solution: 'miroir',
      explanation: 'Un miroir refl√®te le monde en inversant l\'image et nous permet de nous voir.',
      cognitiveSkills: ['Pens√©e m√©taphorique', 'D√©duction logique'],
      scientificBasis: 'Active le cortex pr√©frontal et am√©liore la pens√©e abstraite'
    },
    {
      id: 'riddle-1-2',
      title: 'Le Paradoxe du Temps',
      description: 'Une √©nigme sur la perception temporelle',
      type: 'riddle',
      level: 1,
      difficulty: 4,
      timeLimit: 60,
      content: {
        question: "Plus je cours vite, plus je deviens lent. Plus j'avance, plus je recule. Que suis-je ?",
        hint: "Pensez √† quelque chose qui mesure..."
      },
      solution: 'horloge',
      explanation: 'Plus les aiguilles d\'une horloge tournent vite, plus le temps semble lent relativamente.',
      cognitiveSkills: ['Pens√©e paradoxale', 'Logique temporelle'],
      scientificBasis: 'Stimule la compr√©hension des concepts abstraits de temps et espace'
    }
    // ... plus de puzzles pour chaque niveau
  ],
  
  'visual-puzzles': [
    {
      id: 'visual-1-1',
      title: 'Rotation Mentale',
      description: 'Identifiez la forme apr√®s rotation',
      type: 'visual',
      level: 1,
      difficulty: 5,
      timeLimit: 30,
      content: {
        baseShape: 'üî∫',
        rotatedOptions: ['üîª', '‚óÄÔ∏è', '‚ñ∂Ô∏è', 'üî∫'],
        rotation: 180
      },
      solution: 1,
      explanation: 'La forme triangle pointant vers le haut devient triangle pointant vers le bas apr√®s rotation de 180¬∞',
      cognitiveSkills: ['Rotation mentale', 'Perception spatiale'],
      scientificBasis: 'Active le cortex pari√©tal sup√©rieur, crucial pour la navigation spatiale'
    }
  ],
  
  'logical-reasoning': [
    {
      id: 'logic-1-1',
      title: 'Syllogisme Simple',
      description: 'D√©duction logique basique',
      type: 'logic',
      level: 1,
      difficulty: 4,
      timeLimit: 45,
      content: {
        premises: [
          "Tous les chats sont des mammif√®res",
          "Whiskers est un chat"
        ],
        question: "Que peut-on d√©duire sur Whiskers?"
      },
      solution: "Whiskers est un mammif√®re",
      explanation: 'Par d√©duction logique: si tous les chats sont des mammif√®res et Whiskers est un chat, alors Whiskers est un mammif√®re.',
      cognitiveSkills: ['D√©duction logique', 'Raisonnement syllogistique'],
      scientificBasis: 'Renforce le cortex pr√©frontal dorsolat√©ral, zone cl√© du raisonnement'
    }
  ],
  
  'sequences-patterns': [
    {
      id: 'sequence-1-1',
      title: 'Suite Num√©rique',
      description: 'Trouvez le nombre suivant',
      type: 'sequence',
      level: 1,
      difficulty: 3,
      timeLimit: 30,
      content: {
        sequence: [2, 4, 8, 16, 32, '?'],
        type: 'geometric'
      },
      solution: 64,
      explanation: 'Chaque nombre est multipli√© par 2: 32 √ó 2 = 64',
      cognitiveSkills: ['Reconnaissance de motifs', 'Calcul mental'],
      scientificBasis: 'Active l\'hippocampe et am√©liore la m√©moire pr√©dictive'
    }
  ],
  
  'memory-attention': [
    {
      id: 'memory-1-1',
      title: 'S√©quence de Couleurs',
      description: 'M√©morisez et reproduisez la s√©quence',
      type: 'memory',
      level: 1,
      difficulty: 4,
      timeLimit: 20,
      content: {
        sequence: ['rouge', 'bleu', 'vert', 'jaune'],
        displayTime: 3000,
        type: 'color_sequence'
      },
      solution: ['rouge', 'bleu', 'vert', 'jaune'],
      explanation: 'La m√©morisation de s√©quences am√©liore la m√©moire de travail',
      cognitiveSkills: ['M√©moire de travail', 'Attention soutenue'],
      scientificBasis: 'Am√©liore l\'activit√© dans le r√©seau attentionnel frontopari√©tal'
    }
  ],
  
  'mental-calculation': [
    {
      id: 'calc-1-1',
      title: 'Calcul Rapide',
      description: 'R√©solvez rapidement',
      type: 'calculation',
      level: 1,
      difficulty: 3,
      timeLimit: 15,
      content: {
        operation: '47 + 38',
        type: 'addition'
      },
      solution: 85,
      explanation: '47 + 38 = 85. D√©composition: 40 + 30 = 70, puis 7 + 8 = 15, total: 85',
      cognitiveSkills: ['Calcul mental', 'Vitesse de traitement'],
      scientificBasis: 'Renforce le sillon intrapari√©tal, zone du traitement num√©rique'
    }
  ],
  
  'spatial-creativity': [
    {
      id: 'spatial-1-1',
      title: 'Tangram Cr√©atif',
      description: 'Formez un carr√© avec ces pi√®ces',
      type: 'spatial',
      level: 1,
      difficulty: 6,
      timeLimit: 90,
      content: {
        pieces: ['triangle_large', 'triangle_medium', 'square', 'parallelogram'],
        target: 'square',
        type: 'tangram'
      },
      solution: ['piece_arrangement'],
      explanation: 'La cr√©ativit√© spatiale d√©veloppe la visualisation 3D et la flexibilit√© cognitive',
      cognitiveSkills: ['Visualisation spatiale', 'Cr√©ativit√©', 'R√©solution de probl√®mes'],
      scientificBasis: 'Active le cortex pari√©tal et temporal, r√©gions de l\'imagination spatiale'
    }
  ],
  
  'emotional-intelligence': [
    {
      id: 'emotion-1-1',
      title: 'Reconnaissance √âmotionnelle',
      description: 'Identifiez l\'√©motion exprim√©e',
      type: 'emotional',
      level: 1,
      difficulty: 4,
      timeLimit: 20,
      content: {
        scenario: "Marie vient d'apprendre qu'elle a r√©ussi son examen. Ses yeux brillent, elle sourit largement et serre ses amis dans ses bras.",
        emotions: ['Joie', 'Tristesse', 'Col√®re', 'Peur']
      },
      solution: 'Joie',
      explanation: 'Les signes (yeux brillants, sourire, embrassades) indiquent clairement la joie.',
      cognitiveSkills: ['Empathie', 'Reconnaissance √©motionnelle', 'Intelligence sociale'],
      scientificBasis: 'Am√©liore l\'activit√© de l\'amygdale et du cortex orbitofrontal'
    }
  ],
  
  'spatial-orientation': [
    {
      id: 'orientation-1-1',
      title: 'Navigation Mentale',
      description: 'Trouvez le chemin le plus court',
      type: 'orientation',
      level: 1,
      difficulty: 5,
      timeLimit: 60,
      content: {
        maze: [
          ['S', '‚ñà', '‚ñë', '‚ñë'],
          ['‚ñë', '‚ñà', '‚ñë', '‚ñà'],
          ['‚ñë', '‚ñë', '‚ñë', '‚ñà'],
          ['‚ñà', '‚ñà', '‚ñë', 'E']
        ],
        start: [0, 0],
        end: [3, 3]
      },
      solution: [[0,0], [1,0], [2,0], [2,1], [2,2], [3,2], [3,3]],
      explanation: 'Le chemin optimal √©vite les obstacles (‚ñà) et connecte S √† E.',
      cognitiveSkills: ['Navigation spatiale', 'Planification', 'M√©moire topographique'],
      scientificBasis: 'Stimule l\'hippocampe et le cortex entorhinal, zones de la navigation'
    }
  ],
  
  'language-fluency': [
    {
      id: 'language-1-1',
      title: 'Anagramme Cr√©ative',
      description: 'Trouvez le mot cach√©',
      type: 'language',
      level: 1,
      difficulty: 4,
      timeLimit: 45,
      content: {
        letters: 'NOIRAM',
        clue: 'Pr√©nom f√©minin de 6 lettres',
        type: 'anagram'
      },
      solution: 'MARION',
      explanation: 'NOIRAM r√©arrang√© donne MARION, un pr√©nom f√©minin.',
      cognitiveSkills: ['Fluidit√© verbale', 'Anagrammes', 'Flexibilit√© cognitive'],
      scientificBasis: 'Active les aires de Broca et Wernicke, centres du langage'
    }
  ]
};

// Fonction pour g√©n√©rer plus de puzzles dynamiquement
export const generateMorePuzzles = (categoryId: string, level: number, count: number = 100): Puzzle[] => {
  const basePuzzles = puzzles[categoryId] || [];
  const generated: Puzzle[] = [];
  
  for (let i = 0; i < count; i++) {
    const baseIndex = i % basePuzzles.length;
    const basePuzzle = basePuzzles[baseIndex];
    
    if (basePuzzle) {
      generated.push({
        ...basePuzzle,
        id: `${categoryId}-${level}-${i + 1}`,
        level: level,
        difficulty: Math.min(10, basePuzzle.difficulty + Math.floor(level / 2)),
        timeLimit: Math.max(10, basePuzzle.timeLimit - (level * 5))
      });
    }
  }
  
  return generated;
};

// Fonction pour r√©cup√©rer les puzzles par cat√©gorie et niveau
export const getPuzzlesByCategory = (categoryId: string, level: number): Puzzle[] => {
  const categoryPuzzles = puzzles[categoryId] || [];
  
  // Si on a des puzzles de base pour cette cat√©gorie, on les utilise pour le niveau 1
  if (level === 1 && categoryPuzzles.length > 0) {
    return categoryPuzzles;
  }
  
  // Pour les autres niveaux, on g√©n√®re des puzzles bas√©s sur les puzzles de base
  return generateMorePuzzles(categoryId, level, 20);
};
